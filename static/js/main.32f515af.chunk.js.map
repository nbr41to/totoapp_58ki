{"version":3,"sources":["styles/item.module.css","InputForm.jsx","Item.jsx","ItemList.jsx","App.jsx","index.jsx"],"names":["module","exports","options","value","label","InputForm","addTodo","inputText","setInputText","React","useState","priority","setPriority","console","log","TextField","type","variant","onChange","e","target","Select","labelId","id","defaultValue","MenuItem","map","option","index","Button","color","onClick","Item","props","className","styles","checkbox","checked","todo","done","toggleChecked","contentText","checkedText","content","deleteButton","removeTodo","ItemList","StyledItemList","todos","styled","ul","App","setTodos","isOpen","setIsOpen","StyledModal","style","border","addValue","shortid","generate","alert","hoge","newTodos","filter","div","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32f515af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"item_deleteButton__2T8wB\",\"contentText\":\"item_contentText__2X_o8\",\"checkedText\":\"item_checkedText__1bpKs\"};","import React from 'react';\n// import Select from 'react-select';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst options = [\n  { value: '★☆☆', label: '★☆☆' },\n  { value: '★★☆', label: '★★☆' },\n  { value: '★★★', label: '★★★' }\n];\n\nexport const InputForm = ({ addTodo, inputText, setInputText, ...props }) => {\n\n  // const [inputText, setInputText] = React.useState('');\n  const [priority, setPriority] = React.useState('');\n  console.log(priority);\n  return (\n    <div>\n      <TextField\n        type='text'\n        label=\"やること\"\n        variant=\"outlined\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      {/* <select\n        defaultValue={options[1].value}\n        value={priority}\n        onChange={(e) => setPriority(e.target.value)}\n      >\n        {options.map((option, index) => {\n          // console.log(option.label);\n          return (\n            <option\n              key={index}\n              value={option.value}\n              selected={option.value === '★★☆'}\n            >\n              {option.label}\n            </option>\n          );\n        })}\n      </select> */}\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        variant='outlined'\n        value={priority}\n        onChange={(e) => setPriority(e.target.value)}\n        label=\"優先度\"\n        defaultValue={options[1].value}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        {options.map((option, index) =>\n          <MenuItem key={index} value={option.value}>{option.label}</MenuItem>\n        )}\n      </Select>\n      {/* <Select options={options} defaultValue={options[1]} /> */}\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={() => addTodo(inputText, priority)}\n      >\n        追加\n      </Button>\n    </div >\n  );\n};\n\n// export default InputForm;\n","import React from 'react';\nimport styles from './styles/item.module.css';\n\nconst Item = (props) => {\n  return (\n    <li>\n      <input\n        className={styles.checkbox}\n        type='checkbox'\n        checked={props.todo.done}\n        onChange={() => props.toggleChecked(props.todo.id)}\n      />\n      <span className={`${styles.contentText} ${props.todo.done ? styles.checkedText : ''}`} >\n        優先度：{props.todo.priority}\n        {'　'}\n        {props.todo.content}\n      </span>\n      <button className={styles.deleteButton} onClick={props.removeTodo}>削除</button>\n    </li>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\nimport styled from 'styled-components';\n\nconst ItemList = (props) => {\n\n  return (\n    <StyledItemList>\n      { // js\n        props.todos.map((todo, index) => {\n          return (\n            <Item\n              key={index}\n              todo={todo}\n              removeTodo={() => props.removeTodo(todo.id)}\n              toggleChecked={props.toggleChecked}\n            />\n          );\n        })\n      }\n    </StyledItemList>\n  );\n};\n\nexport default ItemList;\n\nconst StyledItemList = styled.ul`\n  border: 2px solid orange;\n  list-style: none;\n  padding: 12px;\n`;\n","import React, { useState } from \"react\";\nimport { InputForm } from \"./InputForm\";\nimport ItemList from \"./ItemList\";\nimport shortid from \"shortid\";\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst App = () => {\n  // JavaScript書く場所\n  // const todos = ['パスタ作る', 'PRの修正', 'mtg'];\n  // const [todos, setTodos] = useState(['パスタ作る', 'PRの修正', 'mtg']); // 初期値を設定する\n  const [todos, setTodos] = useState([\n    { id: '01', content: 'パスタを作る', done: false, priority: '★★★' },\n    { id: '02', content: 'PRの修正', done: true, priority: '★★☆' },\n    { id: '03', content: 'モンハンやる', done: false, priority: '★★★' },\n    { id: '04', content: 'プログラミングやる', done: false, priority: '★☆☆' },\n  ]);\n  const [inputText, setInputText] = React.useState('');\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const addTodo = (addValue, priority) => {\n    if (addValue) {\n      setTodos([...todos,\n      { id: shortid.generate(), content: addValue, done: false, priority }\n      ]);\n    } else {\n      alert('入力してください');\n    }\n    setInputText('');\n  };\n\n  const toggleChecked = (id) => {\n    const newTodos = todos.map((todo) => {\n      if (id === todo.id) {\n        todo.done = !todo.done;\n        return todo;\n      } else {\n        return todo;\n      }\n    });\n    setTodos(newTodos);\n  };\n\n  const removeTodo = (id) => {\n    const newTodos = todos.filter((todo) => {\n      if (id === todo.id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setTodos(newTodos);\n  };\n\n  return (\n    // JSX...jsを使う場合は{}で囲う\n    <div className=\"App\">\n      <h1>ToDo App</h1>\n      <Button onClick={() => setIsOpen(!isOpen)}>新規作成</Button>\n      {isOpen &&\n        <StyledModal style={{ border: '2px solid #333' }}>\n          君はモダールだ\n          <InputForm\n            addTodo={addTodo}\n            inputText={inputText}\n            setInputText={setInputText}\n            hoge={'hogehoge'}\n          />\n        </StyledModal>}\n      <ItemList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleChecked={toggleChecked}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}